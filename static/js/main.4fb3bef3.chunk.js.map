{"version":3,"sources":["store/types.js","assets/utils/avatarGenerator.js","assets/avatars/avatar1.png","assets/avatars/avatar2.png","assets/avatars/avatar3.png","assets/avatars/avatar4.png","assets/avatars/avatar5.png","assets/avatars/avatar6.png","reducers/commentsReducer.js","reducers/screenReducer.js","reducers/postReducer.js","assets/images/pic1.jpg","assets/images/pic2.jpg","assets/images/pic3.jpg","reducers/index.js","store/index.js","actions/commentsActions.js","actions/postActions.js","actions/screenActions.js","screens/Comments.jsx","screens/Portrait.jsx","screens/Landscape.jsx","assets/utils/useWindowDimension.js","App.js","reportWebVitals.js","index.js"],"names":["ADD","LIKE","REPLY","REPLY_LIKE","PORTRAIT","LANDSCAPE","TOGGLE_LIKED","UPDATE_SIZE","avatars","avatarGetter","avatarNum","initState","comments","id","avatar","name","content","liked","likes","time","replies","replyComment","commentsReducer","state","action","type","types","payload","newComment","length","target","reply_index","commentIdx","Number","replyCommentID","push","isPortrait","width","height","screenReducer","location","pictures","postReducer","combineReducers","screen","post","store","createStore","localStorage","getItem","JSON","parse","load","subscribe","getState","setItem","stringify","addComment","likeComment","toggleLiked","toPortrait","TextContent","hidden","setHidden","substring","contentArray","currIdx","char","map","index","className","onClick","SinglePortraitComment","likable","undefined","Icon","size","PortraitComments","props","useState","slice","comment","toLandscape","SingleReplyComment","replyLikeComment","replyToComment","Image","src","SingleLandscapeComment","expand","setExpand","style","repliesID","LandscapeComments","Array","fill","setSingleExpand","idx","expanded","newExpand","connect","dispatch","pictureIndex","setPictureIndex","prevPictureIndex","setPrevPictureIndex","inputValue","setInputValue","Segment","backgroundImage","picture","display","inverted","pic","Divider","Input","transparent","placeholder","value","onChange","e","replyName","setReplyName","replyID","setReplyID","getWindowDimension","window","innerWidth","innerHeight","updateSize","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","useWindowDimension","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4fb3bef3.chunk.js","sourcesContent":["export const ADD = 'ADD';\r\nexport const LIKE = 'LIKE';\r\nexport const REPLY = 'REPLY';\r\nexport const REPLY_LIKE = 'REPLY_LIKE';\r\n\r\nexport const PORTRAIT = 'PORTRAIT';\r\nexport const LANDSCAPE = 'LANDSCAPE';\r\nexport const TOGGLE_LIKED = 'TOGGLE_LIKED';\r\nexport const UPDATE_SIZE = 'UPDATE_SIZE';\r\n","import avatar1 from \"../avatars/avatar1.png\";\r\nimport avatar2 from \"../avatars/avatar2.png\";\r\nimport avatar3 from \"../avatars/avatar3.png\";\r\nimport avatar4 from \"../avatars/avatar4.png\";\r\nimport avatar5 from \"../avatars/avatar5.png\";\r\nimport avatar6 from \"../avatars/avatar6.png\";\r\n\r\nconst avatars = [\r\n  avatar1, avatar2, avatar3, avatar4, avatar5, avatar6\r\n]\r\n\r\nexport function avatarGenerator(){\r\n  const avatarNum = Math.floor(Math.random() * 6);\r\n  return avatarNum;\r\n}\r\n\r\nexport function avatarGetter(avatarNum){\r\n  return avatars[avatarNum];\r\n}\r\n","export default __webpack_public_path__ + \"static/media/avatar1.3c91360a.png\";","export default __webpack_public_path__ + \"static/media/avatar2.8d623aeb.png\";","export default __webpack_public_path__ + \"static/media/avatar3.9472fa5e.png\";","export default __webpack_public_path__ + \"static/media/avatar4.dcd01877.png\";","export default __webpack_public_path__ + \"static/media/avatar5.b69fcbe9.png\";","export default __webpack_public_path__ + \"static/media/avatar6.b21c3fa4.png\";","import * as types from '../store/types.js';\r\nimport { avatarGenerator } from '../assets/utils/avatarGenerator.js';\r\n\r\nconst initComments = [\r\n  {\r\n    id: 1,\r\n    avatar: 1,\r\n    name: \"selfcomment\",\r\n    content: \"Lorem Ipsum is simply @dummy text of the #printing and #typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley\",\r\n    liked: false,\r\n    likes: 5,\r\n    time: \"19h\",\r\n    replies: [],\r\n  },\r\n  {\r\n    id: 2,\r\n    avatar: 2,\r\n    name: \"normalcomment\",\r\n    content: \"of type and #scrambled it to make a type specimen book.\",\r\n    liked: false,\r\n    likes: 4,\r\n    time: \"15h\",\r\n    replies: [1],\r\n  },\r\n  {\r\n    id: 3,\r\n    avatar: 3,\r\n    name: \"longestcomment\",\r\n    content: \"survived not only #five centuries, but #also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    liked: false,\r\n    likes: 2,\r\n    time: \"12h\",\r\n    replies: [2,3],\r\n  },\r\n  {\r\n    id: 4,\r\n    avatar: 4,\r\n    name: \"longcomment\",\r\n    content: \"Contrary #to popular belief, #Lorem Ipsum is not simply random text. It has roots in a piece of classical Latin literature from 45 BC,\",\r\n    liked: true,\r\n    likes: 61,\r\n    time: \"5h\",\r\n    replies: [],\r\n  },\r\n  {\r\n    id: 5,\r\n    avatar: 5,\r\n    name: \"shortercomment\",\r\n    content: \"psum #dolor sit am\",\r\n    liked: false,\r\n    likes: 6,\r\n    time: \"4h\",\r\n    replies: [],\r\n  },\r\n  {\r\n    id: 6,\r\n    avatar: 1,\r\n    name: \"shortcomment\",\r\n    content: \"theory of @ethics, very popular\",\r\n    liked: true,\r\n    likes: 7,\r\n    time: \"2h\",\r\n    replies: [],\r\n  },\r\n  {\r\n    id: 7,\r\n    avatar: 2,\r\n    name: \"shortestcomment\",\r\n    content: \"very @popular\",\r\n    liked: false,\r\n    likes: 7,\r\n    time: \"1h\",\r\n    replies: [],\r\n  }\r\n];\r\n\r\nconst initReplyComments = [\r\n  {\r\n    id: 1,\r\n    avatar: 2,\r\n    name: \"normalcomment\",\r\n    content: \"of type and @scrambled it to make a type specimen book.\",\r\n    liked: false,\r\n    likes: 2,\r\n    time: \"2h\",\r\n  },\r\n  {\r\n    id: 2,\r\n    avatar: 3,\r\n    name: \"longestcomment\",\r\n    content: \"survived not #only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n    liked: false,\r\n    likes: 0,\r\n    time: \"1h\",\r\n  },\r\n  {\r\n    id: 3,\r\n    avatar: 5,\r\n    name: \"shortercomment\",\r\n    content: \"psum #dolor @sit am\",\r\n    liked: false,\r\n    likes: 1,\r\n    time: \"1h\",\r\n  },\r\n]\r\n\r\nconst initState = {\r\n  comments: initComments,\r\n  replyComment: initReplyComments,\r\n};\r\n\r\nconst commentsReducer = (state = initState, action) => {\r\n  let { comments, replyComment } = state;\r\n  switch (action.type) {\r\n    case types.ADD: {\r\n      let { content } = action.payload;\r\n\r\n      const newComment = {\r\n        id: comments.length+1,\r\n        avatar: 0,\r\n        name: \"currentuser\",\r\n        content: content,\r\n        liked: false,\r\n        likes: 0,\r\n        time: \"1m\",\r\n        replies: [],\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        comments: [...comments, newComment],\r\n      }\r\n    }\r\n\r\n    case types.LIKE: {\r\n      let { target } = action.payload;\r\n      comments[target].liked = !comments[target].liked;\r\n      if (comments[target].liked) {\r\n        comments[target].likes += 1;\r\n      } else {\r\n        comments[target].likes -= 1;\r\n      }\r\n      return {\r\n        ...state,\r\n        comments,\r\n      }\r\n    }\r\n\r\n    case types.REPLY_LIKE: {\r\n      let { target } = action.payload;\r\n      const reply_index = target-1;\r\n      replyComment[reply_index].liked = !replyComment[reply_index].liked;\r\n      if (replyComment[reply_index].liked) {\r\n        replyComment[reply_index].likes += 1;\r\n      } else {\r\n        replyComment[reply_index].likes -= 1;\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        replyComment,\r\n      }\r\n    }\r\n\r\n    case types.REPLY: {\r\n      let { target, content } = action.payload;\r\n\r\n      const commentIdx = Number(target) - 1;\r\n      const replyCommentID = replyComment.length + 1;\r\n\r\n      comments[commentIdx].replies.push(replyCommentID);\r\n\r\n      const newComment = {\r\n        id: replyCommentID,\r\n        avatar: 0,\r\n        name: \"currentuser\",\r\n        content: content,\r\n        liked: false,\r\n        likes: 0,\r\n        time: \"1m\",\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        comments,\r\n        replyComment: [...replyComment, newComment]\r\n      }\r\n    }\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default commentsReducer;\r\n","import * as types from '../store/types.js';\r\n\r\nconst initState = {\r\n  isPortrait: true,\r\n  width: 1080,\r\n  height: 1920,\r\n};\r\n\r\nconst screenReducer = (state = initState, action) => {\r\n  let { isPortrait, width, height, } = state;\r\n  switch (action.type) {\r\n    case types.PORTRAIT: {\r\n      return {\r\n        ...state,\r\n        isPortrait: true,\r\n      }\r\n    }\r\n\r\n    case types.LANDSCAPE: {\r\n      return {\r\n        ...state,\r\n        isPortrait: false,\r\n      }\r\n    }\r\n\r\n    case types.UPDATE_SIZE: {\r\n      return {\r\n        ...state,\r\n        width: action.payload.width,\r\n        height: action.payload.height,\r\n      }\r\n    }\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default screenReducer;\r\n","import pic1 from \"../assets/images/pic1.jpg\";\r\nimport pic2 from \"../assets/images/pic2.jpg\";\r\nimport pic3 from \"../assets/images/pic3.jpg\";\r\nimport * as types from '../store/types.js';\r\n\r\nconst initState = {\r\n  id: \"1\",\r\n  avatar: \"1\",\r\n  name: \"alicedubin\",\r\n  location: \"Four Seasons Hotel Hampshire, England\",\r\n  pictures: [pic1, pic2, pic3],\r\n  time: \"14 HOURS\",\r\n  likes: 54,\r\n  liked: false,\r\n};\r\n\r\nconst postReducer = (state = initState, action) => {\r\n  let { id, avatar, name, location, pictures, likes, liked } = state;\r\n  switch (action.type) {\r\n    case types.TOGGLE_LIKED: {\r\n      if (action.payload.liked) {\r\n        return {\r\n          ...state,\r\n          liked: true,\r\n          likes: likes + 1,\r\n        }\r\n      } else {\r\n        return {\r\n          ...state,\r\n          liked: false,\r\n          likes: likes - 1,\r\n        }\r\n      }\r\n\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default postReducer;\r\n","export default __webpack_public_path__ + \"static/media/pic1.d78b533a.jpg\";","export default __webpack_public_path__ + \"static/media/pic2.b08bd1ee.jpg\";","export default __webpack_public_path__ + \"static/media/pic3.6274ed2b.jpg\";","import { combineReducers } from 'redux';\r\n\r\nimport commentsReducer from './commentsReducer.js';\r\nimport screenReducer from './screenReducer.js';\r\nimport postReducer from './postReducer.js';\r\n\r\nexport default combineReducers({\r\n  comments: commentsReducer,\r\n  screen: screenReducer,\r\n  post: postReducer,\r\n});\r\n","import { createStore } from 'redux';\r\nimport combineReducers from '../reducers/index.js';\r\n\r\nfunction save(state) {\r\n  localStorage.setItem(\"state\", JSON.stringify(state));\r\n}\r\n\r\nfunction load() {\r\n  const state = localStorage.getItem(\"state\");\r\n  if (state)  return JSON.parse(state)\r\n  return undefined;\r\n}\r\n\r\nconst store = createStore(combineReducers, load());\r\n\r\nstore.subscribe(() => save(store.getState()));\r\n\r\nexport default store;\r\n","import * as types from '../store/types.js';\r\n\r\nexport const addComment = (content) => ({\r\n  type: types.ADD,\r\n  payload : {\r\n    content: content,\r\n  },\r\n});\r\n\r\nexport const likeComment = (target) => ({\r\n  type: types.LIKE,\r\n  payload : {\r\n    target: target,\r\n  },\r\n});\r\n\r\nexport const replyLikeComment = (target) => ({\r\n  type: types.REPLY_LIKE,\r\n  payload : {\r\n    target: target,\r\n  },\r\n});\r\n\r\nexport const replyComment = (target, content) => ({\r\n  type: types.REPLY,\r\n  payload : {\r\n    target: target,\r\n    content: content,\r\n  },\r\n});\r\n","import * as types from '../store/types.js';\r\n\r\nexport const toggleLiked = (liked) => ({\r\n  type: types.TOGGLE_LIKED,\r\n  payload: {\r\n    liked: liked,\r\n  }\r\n});\r\n","import * as types from '../store/types.js';\r\n\r\nexport const toPortrait = () => ({\r\n  type: types.PORTRAIT,\r\n});\r\n\r\nexport const toLandscape = () => ({\r\n  type: types.LANDSCAPE,\r\n});\r\n\r\nexport const updateSize = (height, width) => ({\r\n  type: types.UPDATE_SIZE,\r\n  payload: {\r\n    width: width,\r\n    height: height,\r\n  }\r\n});\r\n","import { avatarGetter } from '../assets/utils/avatarGenerator.js';\r\nimport { useState } from 'react';\r\nimport {\r\n  Icon,\r\n  Header,\r\n  Image,\r\n} from 'semantic-ui-react';\r\n\r\nconst maxCommentCount = 3;\r\nconst maxCommentLength = 70;\r\n\r\nfunction TextContent({name, content, hidden, setHidden}) {\r\n  if (hidden) {\r\n    content = content.substring(0, maxCommentLength) + \" ...\";\r\n  }\r\n\r\n  let contentArray = [\"\"];\r\n  let currIdx = 0\r\n\r\n  for (let char in content) {\r\n    if (content[char] === \"@\" || content[char] === \"#\" || content[char] === \" \") {\r\n      contentArray.push(content[char]);\r\n      currIdx ++;\r\n    } else {\r\n      contentArray[currIdx] += content[char];\r\n    }\r\n  }\r\n\r\n  return (\r\n    <p>\r\n      <strong> { name } </strong> &nbsp;\r\n      {\r\n        contentArray.map((content, index) => {\r\n          if(content[0] === \"@\" || content[0] === \"#\"){\r\n            return <span key={index} className=\"text-button text-link\"> {content} </span>\r\n          }else{\r\n            return <span key={index}> {content} </span>\r\n          }\r\n        })\r\n      }\r\n      {\r\n        hidden && <span className=\"text-button\" onClick={()=>{setHidden(false)}}> &nbsp; more </span>\r\n      }\r\n    </p>\r\n  )\r\n}\r\n\r\nfunction SinglePortraitComment({id, name, content, liked}, index, likeComment, likable=true, hidden=false, setHidden=undefined){\r\n  return (\r\n    <div className=\"portrait-single-comment\" key={id}>\r\n      <div className=\"portrait-single-comment-text\">\r\n        <TextContent name={name} content={content} hidden={hidden} setHidden={setHidden}/>\r\n      </div>\r\n      {\r\n        likable &&\r\n        <div className=\"text-button\">\r\n          <Icon size=\"small\" name={liked ? \"heart\" : \"heart outline\"} onClick={()=>likeComment(index)}/>\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function PortraitComments(props) {\r\n  const [hidden, setHidden] = useState(true);\r\n  if (props.comments.length <= maxCommentCount){\r\n    return (\r\n      <div className=\"portrait-comments-group\">\r\n        {\r\n          SinglePortraitComment(props.comments[0], 0, props.likeComment, false, hidden, setHidden)\r\n        }\r\n        {\r\n          props.comments.slice(1,).map(\r\n            (comment, index) => SinglePortraitComment(comment, 1+index, props.likeComment)\r\n          )\r\n        }\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"portrait-comments-group\">\r\n        {\r\n          SinglePortraitComment(props.comments[0], 0, props.likeComment, false, hidden, setHidden)\r\n        }\r\n        <div className=\"portrait-forced-left text-button\">\r\n          <p className=\"portrait-comments-view-all-text\" onClick={props.toLandscape}> View all {props.comments.length} comments </p>\r\n        </div>\r\n        {\r\n          props.comments.slice(-(maxCommentCount-1),).map(\r\n            (comment, index) => SinglePortraitComment(comment, props.comments.length-(maxCommentCount-1)+index, props.likeComment)\r\n          )\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction SingleReplyComment(replyComment, id, index, replyLikeComment, replyToComment){\r\n  return (\r\n    <div key={index}>\r\n      <div className=\"landscape-single-comment\">\r\n        <div className=\"landscape-single-comment-header\">\r\n          <Image src={avatarGetter(replyComment.avatar)} avatar className=\"landscape-single-comment-avatar\"/>\r\n\r\n          <div className=\"landscape-single-comment-text\">\r\n            <TextContent name={replyComment.name} content={replyComment.content}/>\r\n          </div>\r\n        </div>\r\n        <div className=\"text-button\">\r\n          <Icon size=\"small\" name={replyComment.liked ? \"heart\" : \"heart outline\"} onClick={()=>replyLikeComment(replyComment.id)}/>\r\n        </div>\r\n      </div>\r\n      <div className=\"landscape-single-comment-info\">\r\n        <p className=\"landscape-single-comment-info-text\">\r\n          {replyComment.time}\r\n        </p>\r\n        {\r\n          replyComment.likes == 1 &&\r\n          <h5 className=\"landscape-single-comment-info-text\"> {replyComment.likes} like </h5>\r\n        }\r\n        {\r\n          replyComment.likes > 1 &&\r\n          <h5 className=\"landscape-single-comment-info-text\"> {replyComment.likes} likes </h5>\r\n        }\r\n        <h5 className=\"landscape-single-comment-info-text text-button\" onClick={() => replyToComment(replyComment.name, id)}>\r\n          Reply\r\n        </h5>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction SingleLandscapeComment({id, avatar, name, content, liked, likes, time, replies}, replyComment, index, likeComment, replyLikeComment, replyToComment, expand, setExpand, likable=true){\r\n  return (\r\n    <div key={id}>\r\n      <div className=\"landscape-single-comment\">\r\n        <div className=\"landscape-single-comment-header\">\r\n          <Image src={avatarGetter(avatar)} avatar className=\"landscape-single-comment-avatar\"/>\r\n\r\n          <div className=\"landscape-single-comment-text\">\r\n            <TextContent name={name} content={content}/>\r\n          </div>\r\n        </div>\r\n        {\r\n          likable &&\r\n          <div className=\"text-button\">\r\n            <Icon size=\"small\" name={liked ? \"heart\" : \"heart outline\"} onClick={()=>likeComment(index)}/>\r\n          </div>\r\n        }\r\n      </div>\r\n      <div className=\"landscape-single-comment-info\">\r\n        <p className=\"landscape-single-comment-info-text\">\r\n          {time}\r\n        </p>\r\n        {\r\n          likes == 1 &&\r\n          <h5 className=\"landscape-single-comment-info-text\"> {likes} like </h5>\r\n        }\r\n        {\r\n          likes > 1 &&\r\n          <h5 className=\"landscape-single-comment-info-text\"> {likes} likes </h5>\r\n        }\r\n        {\r\n          likable &&\r\n          <h5 className=\"landscape-single-comment-info-text text-button\" onClick={() => replyToComment(name, id)}>\r\n            Reply\r\n          </h5>\r\n        }\r\n      </div>\r\n        {\r\n          !expand && replies.length > 0 &&\r\n          <div className=\"text-button\" onClick={()=>setExpand(index-1, !expand)}>\r\n            <div className=\"landscape-single-comment-view-replies\">\r\n              <hr className=\"landscape-single-comment-view-replies-left\" style={{width:\"40px\"}}/>\r\n              <p>  View replies ({replies.length}) </p>\r\n            </div>\r\n          </div>\r\n        }\r\n        {\r\n          expand && replies.length > 0 &&\r\n          <div className=\"reply-comment-group\">\r\n            {\r\n              replies.map( (repliesID, index) => SingleReplyComment(replyComment[repliesID-1], id, index, replyLikeComment, replyToComment))\r\n            }\r\n          </div>\r\n        }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function LandscapeComments(props) {\r\n  const [expand, setExpand] = useState(Array(props.comments.length).fill(false));\r\n\r\n  function setSingleExpand(idx, expanded){\r\n    let newExpand = [...expand]\r\n    newExpand[idx] = expanded;\r\n    setExpand(newExpand);\r\n  }\r\n\r\n  return (\r\n    <div className=\"landscape-comments-group\">\r\n      {\r\n        SingleLandscapeComment(props.comments[0], props.replyComment, 0, props.likeComment, props.replyLikeComment, props.replyToComment, expand[0], setSingleExpand, false)\r\n      }\r\n      {\r\n        props.comments.slice(1,).map(\r\n          (comment, index) => SingleLandscapeComment(comment, props.replyComment, 1+index, props.likeComment, props.replyLikeComment, props.replyToComment, expand[index], setSingleExpand)\r\n        )\r\n      }\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport store from \"../store\";\r\nimport { addComment, likeComment, replyComment } from \"../actions/commentsActions.js\";\r\nimport { toggleLiked } from \"../actions/postActions.js\";\r\nimport { toLandscape } from \"../actions/screenActions.js\";\r\nimport { avatarGetter } from '../assets/utils/avatarGenerator.js';\r\nimport { PortraitComments } from \"./Comments.jsx\";\r\n\r\nimport {\r\n  Input,\r\n  Segment,\r\n  Image,\r\n  Header,\r\n  Icon,\r\n  Divider,\r\n} from 'semantic-ui-react';\r\n\r\nfunction Portrait(props) {\r\n  const [pictureIndex, setPictureIndex] = useState(0);\r\n  const [prevPictureIndex, setPrevPictureIndex] = useState(undefined);\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  return (\r\n    <div className=\"portrait\">\r\n      <div className=\"container\">\r\n        <Segment className=\"segment\">\r\n          <div className=\"header portrait-header\">\r\n            <div className=\"portrait-header\">\r\n              <div className=\"text-button\">\r\n                <Image src={avatarGetter(props.post.avatar)} avatar className=\"portrait-header-avatar\"/>\r\n              </div>\r\n              <div className=\"portrait-header-text\">\r\n                <div className=\"text-button\">\r\n                  <h4 className=\"portrait-header-name\"> {props.post.name} </h4>\r\n                </div>\r\n                <div className=\"text-button\">\r\n                  <p className=\"portrait-header-location\">{props.post.location}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"text-button\">\r\n              <Icon name=\"ellipsis horizontal\"/>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"portrait-image\">\r\n            <div className=\"portrait-image-wrapper\"\r\n              style={{\r\n                backgroundImage: \"url(\" + props.post.pictures[prevPictureIndex] + \")\"\r\n              }}\r\n            >\r\n              {\r\n                props.post.pictures.map(\r\n                  (picture, index) =>\r\n                  <img\r\n                    key={index}\r\n                    src={props.post.pictures[pictureIndex]}\r\n                    style={{display: pictureIndex === index? 'block' : 'none'}}\r\n                    className={prevPictureIndex !== undefined &&\r\n                      (prevPictureIndex < pictureIndex ? \"image-slide-right\" : \"image-slide-left\")}\r\n                    />\r\n                )\r\n              }\r\n\r\n              {\r\n                pictureIndex > 0 &&\r\n                <div className=\"floated-left text-button image-button\">\r\n                  <Icon name=\"arrow circle left\" size=\"big\" inverted onClick={\r\n                    () => {\r\n                      setPictureIndex(pictureIndex - 1);\r\n                      setPrevPictureIndex(pictureIndex);\r\n                    }\r\n                  }/>\r\n                </div>\r\n              }\r\n              {\r\n                pictureIndex < props.post.pictures.length-1 &&\r\n                <div className=\"floated-right text-button image-button\">\r\n                  <Icon name=\"arrow circle right\" size=\"big\" inverted onClick={\r\n                    () => {\r\n                      setPictureIndex(pictureIndex + 1);\r\n                      setPrevPictureIndex(pictureIndex);\r\n                    }\r\n                  }/>\r\n                </div>\r\n              }\r\n            </div>\r\n\r\n\r\n            <div className=\"portrait-image-reactions\">\r\n              <div>\r\n                <Icon className=\"icon-button-left text-button\" onClick = {() => props.toggleLiked(!props.post.liked)} size=\"large\" name={ props.post.liked? \"heart\" : \"heart outline\" }/>\r\n                <Icon className=\"icon-button-center text-button\" onClick = {props.toLandscape} size=\"large\" name=\"comment outline\"/>\r\n                <Icon className=\"icon-button-center text-button\" size=\"large\" name=\"share square\"/>\r\n              </div>\r\n              <div>\r\n                {\r\n                  props.post.pictures.map(\r\n                    (pic, index) => <Icon key={index} size=\"mini\" name={index === pictureIndex ? \"circle\" : \"circle outline\"} />\r\n                  )\r\n                }\r\n              </div>\r\n              <div>\r\n                <Icon className=\"icon-button-center\" size=\"mini\" name=\"\"/>\r\n                <Icon className=\"icon-button-center\" size=\"mini\" name=\"\"/>\r\n                <Icon className=\"icon-button-right text-button\" size=\"large\" name=\"bookmark outline\"/>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <h5 className=\"portrait-likes-count portrait-forced-left\"> {props.post.likes} likes </h5>\r\n\r\n          <div className=\"portrait-comments\">\r\n            <PortraitComments comments={props.comments.comments} toLandscape={props.toLandscape} likeComment={props.likeComment}/>\r\n          </div>\r\n\r\n          <div className=\"portrait-time portrait-forced-left\">\r\n            <p className=\"portrait-time-text\"> {props.post.time} AGO </p>\r\n          </div>\r\n\r\n          <Divider className=\"divider\"/>\r\n\r\n          <div className=\"portrait-add-comment\">\r\n            <Input transparent placeholder='Add a comment...' value={inputValue} onChange={(e, { value }) => setInputValue(value)}/>\r\n            {\r\n              inputValue !== \"\"?\r\n              (\r\n                <div className=\"text-button\">\r\n                  <h5 className=\"post-button\" onClick={\r\n                    ()=>{\r\n                      props.addComment(inputValue);\r\n                      setInputValue(\"\");\r\n                    }\r\n                  }> Post </h5>\r\n                </div>\r\n              ) : (\r\n                <div className=\"text-button\">\r\n                  <h5 className=\"post-button-disabled\"> Post </h5>\r\n                </div>\r\n              )\r\n            }\r\n\r\n          </div>\r\n        </Segment>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ( state ) => {\r\n  return {\r\n    screen: state.screen,\r\n    comments: state.comments,\r\n    post: state.post,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addComment: (content) => dispatch(addComment(content)),\r\n    likeComment: (target) => dispatch(likeComment(target)),\r\n    toggleLiked: (liked) => dispatch(toggleLiked(liked)),\r\n    toLandscape: () => dispatch(toLandscape()),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Portrait)\r\n","import { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport store from \"../store\";\r\nimport { addComment, likeComment, replyComment, replyLikeComment } from \"../actions/commentsActions.js\";\r\nimport { toggleLiked } from \"../actions/postActions.js\";\r\nimport { toPortrait } from \"../actions/screenActions.js\";\r\nimport { avatarGetter } from '../assets/utils/avatarGenerator.js';\r\nimport { LandscapeComments } from \"./Comments.jsx\";\r\n\r\nimport {\r\n  Input,\r\n  Segment,\r\n  Image,\r\n  Header,\r\n  Icon,\r\n  Divider,\r\n} from 'semantic-ui-react';\r\n\r\n\r\nfunction Landscape(props) {\r\n  const [pictureIndex, setPictureIndex] = useState(0);\r\n  const [prevPictureIndex, setPrevPictureIndex] = useState(undefined);\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [replyName, setReplyName] = useState(\"\");\r\n  const [replyID, setReplyID] = useState(undefined);\r\n\r\n\r\n  function replyToComment(name, id){\r\n    setInputValue(\"@\" + name + \" \");\r\n    setReplyID(id);\r\n    setReplyName(\"@\" + name + \" \");\r\n  }\r\n\r\n  return (\r\n    <div className=\"landscape\">\r\n      <div className=\"container landscape-container\">\r\n        <Segment className=\"segment landscape-segment\">\r\n\r\n          <div className=\"landscape-image\"\r\n            style={{\r\n              backgroundImage: \"url(\" + props.post.pictures[prevPictureIndex] + \")\"\r\n            }}\r\n          >\r\n            {\r\n              props.post.pictures.map(\r\n                (picture, index) =>\r\n                <img\r\n                  key={index}\r\n                  src={props.post.pictures[pictureIndex]}\r\n                  style={{display: pictureIndex === index? 'block' : 'none'}}\r\n                  className={prevPictureIndex !== undefined &&\r\n                    (prevPictureIndex < pictureIndex ? \"image-slide-right\" : \"image-slide-left\")}\r\n                  />\r\n              )\r\n            }\r\n\r\n            <div className=\"floated-top-left text-button image-button\">\r\n              <Icon name=\"close\" size=\"large\" inverted onClick={props.toPortrait} />\r\n            </div>\r\n            {\r\n              pictureIndex > 0 &&\r\n              <div className=\"floated-left text-button image-button\">\r\n                <Icon name=\"arrow circle left\" size=\"big\" inverted onClick={\r\n                  () => {\r\n                    setPictureIndex(pictureIndex - 1);\r\n                    setPrevPictureIndex(pictureIndex);\r\n                  }\r\n                }/>\r\n              </div>\r\n            }\r\n            {\r\n              pictureIndex < props.post.pictures.length-1 &&\r\n              <div className=\"floated-right text-button image-button\">\r\n                <Icon name=\"arrow circle right\" size=\"big\" inverted onClick={\r\n                  () => {\r\n                    setPictureIndex(pictureIndex + 1);\r\n                    setPrevPictureIndex(pictureIndex);\r\n                  }\r\n                }/>\r\n              </div>\r\n            }\r\n            <div className=\"floated-bottom image-button\">\r\n              {\r\n                props.post.pictures.map(\r\n                  (pic, index) => <Icon key={index} size=\"small\" name={index === pictureIndex ? \"circle\" : \"circle outline\"} inverted/>\r\n                )\r\n              }\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"landscape-info\">\r\n            <div>\r\n              <div className=\"header landscape-header\">\r\n                <div className=\"landscape-header\">\r\n                  <div className=\"text-button\">\r\n                    <Image src={avatarGetter(props.post.avatar)} avatar className=\"landscape-header-avatar\"/>\r\n                  </div>\r\n                  <div className=\"landscape-header-text\">\r\n                    <div className=\"text-button\">\r\n                      <h4> {props.post.name} &nbsp; &middot; &nbsp; Following </h4>\r\n                    </div>\r\n                    <div className=\"text-button\">\r\n                      <p className=\"landscape-header-location\">{props.post.location}</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"text-button\">\r\n                  <Icon name=\"ellipsis horizontal\"/>\r\n                </div>\r\n              </div>\r\n\r\n              <Divider className=\"landscape-divider\"/>\r\n\r\n              <div className=\"landscape-comments\">\r\n                <LandscapeComments comments={props.comments.comments} replyComment={props.comments.replyComment} toLandscape={props.toLandscape} likeComment={props.likeComment} replyLikeComment={props.replyLikeComment} replyToComment={replyToComment}/>\r\n              </div>\r\n            </div>\r\n\r\n            <div>\r\n              <Divider className=\"landscape-divider\"/>\r\n              <div className=\"portrait-image-reactions\">\r\n                <div>\r\n                  <Icon className=\"icon-button-left text-button\" onClick = {() => props.toggleLiked(!props.post.liked)} size=\"large\" name={ props.post.liked? \"heart\" : \"heart outline\" }/>\r\n                  <Icon className=\"icon-button-center text-button\" size=\"large\" name=\"comment outline\"/>\r\n                  <Icon className=\"icon-button-center text-button\" size=\"large\" name=\"share square\"/>\r\n                </div>\r\n                <div>\r\n                  <Icon className=\"icon-button-center\" size=\"mini\" name=\"\"/>\r\n                  <Icon className=\"icon-button-center\" size=\"mini\" name=\"\"/>\r\n                  <Icon className=\"icon-button-right text-button\" size=\"large\" name=\"bookmark outline\"/>\r\n                </div>\r\n              </div>\r\n\r\n              <h5 className=\"portrait-likes-count portrait-forced-left\"> {props.post.likes} likes </h5>\r\n\r\n              <div className=\"portrait-time portrait-forced-left\">\r\n                <p className=\"portrait-time-text\"> {props.post.time} AGO </p>\r\n              </div>\r\n\r\n              <Divider className=\"landscape-divider\"/>\r\n\r\n              <div className=\"portrait-add-comment\">\r\n                <Input transparent placeholder='Add a comment...' value={inputValue} onChange={(e, { value }) => setInputValue(value)}/>\r\n                {\r\n                  inputValue !== \"\"?\r\n                  (\r\n                    <div className=\"text-button\">\r\n                      <h5 className=\"post-button\" onClick={\r\n                        ()=>{\r\n                          const content = inputValue;\r\n\r\n                          if (replyID && content.substring(0,replyName.length) === replyName) {\r\n                            props.replyComment(replyID, content.substring(replyName.length,));\r\n                          } else{\r\n                            props.addComment(content);\r\n                          }\r\n                          setInputValue(\"\");\r\n                          setReplyID(undefined);\r\n                          setReplyName(\"\");\r\n                        }\r\n                      }> Post </h5>\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"text-button\">\r\n                      <h5 className=\"post-button-disabled\"> Post </h5>\r\n                    </div>\r\n                  )\r\n                }\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Segment>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ( state ) => {\r\n  return {\r\n    screen: state.screen,\r\n    comments: state.comments,\r\n    post: state.post,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addComment: (content) => dispatch(addComment(content)),\r\n    likeComment: (target) => dispatch(likeComment(target)),\r\n    replyComment: (target,content) => dispatch(replyComment(target,content)),\r\n    replyLikeComment: (target) => dispatch(replyLikeComment(target)),\r\n    toggleLiked: (liked) => dispatch(toggleLiked(liked)),\r\n    toPortrait: () => dispatch(toPortrait()),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Landscape)\r\n","import { useState, useEffect } from 'react';\r\n\r\nfunction getWindowDimension() {\r\n  const { innerWidth: width, innerHeight: height } = window;\r\n  return {\r\n    width,\r\n    height\r\n  };\r\n}\r\n\r\nexport default function useWindowDimension() {\r\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimension());\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(getWindowDimension());\r\n    }\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  return windowDimensions;\r\n}\r\n","import { connect } from 'react-redux';\nimport './App.css';\nimport './assets/styles/Portrait.css';\nimport './assets/styles/Landscape.css';\nimport './assets/styles/Comments.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport Portrait from \"./screens/Portrait\";\nimport Landscape from \"./screens/Landscape\";\nimport useWindowDimension from \"./assets/utils/useWindowDimension.js\";\nimport { updateSize } from \"./actions/screenActions.js\";\nimport { toPortrait } from \"./actions/screenActions.js\";\n\nfunction App(props) {\n  const { height, width } = useWindowDimension();\n  props.updateSize(height, width);\n\n  if (width < 800) {\n    props.toPortrait();\n    return (\n      <Portrait/>\n    )\n  }\n\n  return (\n    <div className=\"App\">\n      {\n        props.isPortrait ? <Portrait/> : <Landscape/>\n      }\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isPortrait: state.screen.isPortrait,\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateSize: (height, width) => dispatch(updateSize(height, width)),\n    toPortrait: () => dispatch(toPortrait()),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './store/index.js';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}